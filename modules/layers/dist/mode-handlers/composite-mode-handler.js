"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CompositeModeHandler = void 0;

var _modeHandler = require("./mode-handler.js");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// TODO edit-modes: delete handlers once EditMode fully implemented
class CompositeModeHandler extends _modeHandler.ModeHandler {
  constructor(handlers) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    super();

    _defineProperty(this, "handlers", void 0);

    _defineProperty(this, "options", void 0);

    this.handlers = handlers;
    this.options = options;
  }

  _coalesce(callback) {
    var resultEval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var result;

    for (var i = 0; i < this.handlers.length; i++) {
      result = callback(this.handlers[i]);

      if (resultEval ? resultEval(result) : result) {
        break;
      }
    }

    return result;
  }

  setFeatureCollection(featureCollection) {
    this.handlers.forEach(function (handler) {
      return handler.setFeatureCollection(featureCollection);
    });
  }

  setModeConfig(modeConfig) {
    this.handlers.forEach(function (handler) {
      return handler.setModeConfig(modeConfig);
    });
  }

  setSelectedFeatureIndexes(indexes) {
    this.handlers.forEach(function (handler) {
      return handler.setSelectedFeatureIndexes(indexes);
    });
  }

  handleClick(event) {
    return this._coalesce(function (handler) {
      return handler.handleClick(event);
    });
  }

  handlePointerMove(event) {
    return this._coalesce(function (handler) {
      return handler.handlePointerMove(event);
    }, function (result) {
      return result && Boolean(result.editAction);
    });
  }

  handleStartDragging(event) {
    return this._coalesce(function (handler) {
      return handler.handleStartDragging(event);
    });
  }

  handleStopDragging(event) {
    return this._coalesce(function (handler) {
      return handler.handleStopDragging(event);
    });
  }

  getTentativeFeature() {
    return this._coalesce(function (handler) {
      return handler.getTentativeFeature();
    });
  }

  getEditHandles(picks, groundCoords) {
    // TODO: Combine the handles *BUT* make sure if none of the results have
    // changed to return the same object so that "editHandles !== this.state.editHandles"
    // in editable-geojson-layer works.
    return this._coalesce(function (handler) {
      return handler.getEditHandles(picks, groundCoords);
    }, function (handles) {
      return Array.isArray(handles) && handles.length > 0;
    });
  }

  getCursor(_ref) {
    var isDragging = _ref.isDragging;
    return this._coalesce(function (handler) {
      return handler.getCursor({
        isDragging: isDragging
      });
    });
  }

}

exports.CompositeModeHandler = CompositeModeHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlLWhhbmRsZXJzL2NvbXBvc2l0ZS1tb2RlLWhhbmRsZXIuanMiXSwibmFtZXMiOlsiQ29tcG9zaXRlTW9kZUhhbmRsZXIiLCJNb2RlSGFuZGxlciIsImNvbnN0cnVjdG9yIiwiaGFuZGxlcnMiLCJvcHRpb25zIiwiX2NvYWxlc2NlIiwiY2FsbGJhY2siLCJyZXN1bHRFdmFsIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsInNldEZlYXR1cmVDb2xsZWN0aW9uIiwiZmVhdHVyZUNvbGxlY3Rpb24iLCJmb3JFYWNoIiwiaGFuZGxlciIsInNldE1vZGVDb25maWciLCJtb2RlQ29uZmlnIiwic2V0U2VsZWN0ZWRGZWF0dXJlSW5kZXhlcyIsImluZGV4ZXMiLCJoYW5kbGVDbGljayIsImV2ZW50IiwiaGFuZGxlUG9pbnRlck1vdmUiLCJCb29sZWFuIiwiZWRpdEFjdGlvbiIsImhhbmRsZVN0YXJ0RHJhZ2dpbmciLCJoYW5kbGVTdG9wRHJhZ2dpbmciLCJnZXRUZW50YXRpdmVGZWF0dXJlIiwiZ2V0RWRpdEhhbmRsZXMiLCJwaWNrcyIsImdyb3VuZENvb3JkcyIsImhhbmRsZXMiLCJBcnJheSIsImlzQXJyYXkiLCJnZXRDdXJzb3IiLCJpc0RyYWdnaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBU0E7Ozs7QUFFQTtBQUNPLE1BQU1BLG9CQUFOLFNBQW1DQyx3QkFBbkMsQ0FBK0M7QUFJcERDLEVBQUFBLFdBQVcsQ0FBQ0MsUUFBRCxFQUFxRDtBQUFBLFFBQXRCQyxPQUFzQix1RUFBSixFQUFJO0FBQzlEOztBQUQ4RDs7QUFBQTs7QUFFOUQsU0FBS0QsUUFBTCxHQUFnQkEsUUFBaEI7QUFDQSxTQUFLQyxPQUFMLEdBQWVBLE9BQWY7QUFDRDs7QUFFREMsRUFBQUEsU0FBUyxDQUFJQyxRQUFKLEVBQXVFO0FBQUEsUUFBdkNDLFVBQXVDLHVFQUFULElBQVM7QUFDOUUsUUFBSUMsTUFBSjs7QUFFQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVB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QUFBLGFBQUlBLE9BQU8sQ0FBQ21CLFNBQVIsQ0FBa0I7QUFBRUMsUUFBQUEsVUFBVSxFQUFWQTtBQUFGLE9BQWxCLENBQUo7QUFBQSxLQUF0QixDQUFQO0FBQ0Q7O0FBdEVtRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCB0eXBlIHsgRmVhdHVyZUNvbGxlY3Rpb24sIEZlYXR1cmUsIFBvc2l0aW9uIH0gZnJvbSAna2VwbGVyLW91dGRhdGVkLW5lYnVsYS5nbC1lZGl0LW1vZGVzJztcbmltcG9ydCB0eXBlIHtcbiAgQ2xpY2tFdmVudCxcbiAgUG9pbnRlck1vdmVFdmVudCxcbiAgU3RhcnREcmFnZ2luZ0V2ZW50LFxuICBTdG9wRHJhZ2dpbmdFdmVudFxufSBmcm9tICcuLi9ldmVudC10eXBlcy5qcyc7XG5pbXBvcnQgeyBNb2RlSGFuZGxlciwgdHlwZSBFZGl0QWN0aW9uLCB0eXBlIEVkaXRIYW5kbGUgfSBmcm9tICcuL21vZGUtaGFuZGxlci5qcyc7XG5cbi8vIFRPRE8gZWRpdC1tb2RlczogZGVsZXRlIGhhbmRsZXJzIG9uY2UgRWRpdE1vZGUgZnVsbHkgaW1wbGVtZW50ZWRcbmV4cG9ydCBjbGFzcyBDb21wb3NpdGVNb2RlSGFuZGxlciBleHRlbmRzIE1vZGVIYW5kbGVyIHtcbiAgaGFuZGxlcnM6IEFycmF5PE1vZGVIYW5kbGVyPjtcbiAgb3B0aW9uczogT2JqZWN0O1xuXG4gIGNvbnN0cnVjdG9yKGhhbmRsZXJzOiBBcnJheTxNb2RlSGFuZGxlcj4sIG9wdGlvbnM6IE9iamVjdCA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmhhbmRsZXJzID0gaGFuZGxlcnM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgfVxuXG4gIF9jb2FsZXNjZTxUPihjYWxsYmFjazogTW9kZUhhbmRsZXIgPT4gVCwgcmVzdWx0RXZhbDogPyhUKSA9PiBib29sZWFuID0gbnVsbCk6IFQge1xuICAgIGxldCByZXN1bHQ6IFQ7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaGFuZGxlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKHRoaXMuaGFuZGxlcnNbaV0pO1xuICAgICAgaWYgKHJlc3VsdEV2YWwgPyByZXN1bHRFdmFsKHJlc3VsdCkgOiByZXN1bHQpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIChyZXN1bHQ6IGFueSk7XG4gIH1cblxuICBzZXRGZWF0dXJlQ29sbGVjdGlvbihmZWF0dXJlQ29sbGVjdGlvbjogRmVhdHVyZUNvbGxlY3Rpb24pOiB2b2lkIHtcbiAgICB0aGlzLmhhbmRsZXJzLmZvckVhY2goaGFuZGxlciA9PiBoYW5kbGVyLnNldEZlYXR1cmVDb2xsZWN0aW9uKGZlYXR1cmVDb2xsZWN0aW9uKSk7XG4gIH1cblxuICBzZXRNb2RlQ29uZmlnKG1vZGVDb25maWc6IGFueSk6IHZvaWQge1xuICAgIHRoaXMuaGFuZGxlcnMuZm9yRWFjaChoYW5kbGVyID0+IGhhbmRsZXIuc2V0TW9kZUNvbmZpZyhtb2RlQ29uZmlnKSk7XG4gIH1cblxuICBzZXRTZWxlY3RlZEZlYXR1cmVJbmRleGVzKGluZGV4ZXM6IG51bWJlcltdKTogdm9pZCB7XG4gICAgdGhpcy5oYW5kbGVycy5mb3JFYWNoKGhhbmRsZXIgPT4gaGFuZGxlci5zZXRTZWxlY3RlZEZlYXR1cmVJbmRleGVzKGluZGV4ZXMpKTtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKGV2ZW50OiBDbGlja0V2ZW50KTogP0VkaXRBY3Rpb24ge1xuICAgIHJldHVybiB0aGlzLl9jb2FsZXNjZShoYW5kbGVyID0+IGhhbmRsZXIuaGFuZGxlQ2xpY2soZXZlbnQpKTtcbiAgfVxuXG4gIGhhbmRsZVBvaW50ZXJNb3ZlKGV2ZW50OiBQb2ludGVyTW92ZUV2ZW50KTogeyBlZGl0QWN0aW9uOiA/RWRpdEFjdGlvbiwgY2FuY2VsTWFwUGFuOiBib29sZWFuIH0ge1xuICAgIHJldHVybiB0aGlzLl9jb2FsZXNjZShcbiAgICAgIGhhbmRsZXIgPT4gaGFuZGxlci5oYW5kbGVQb2ludGVyTW92ZShldmVudCksXG4gICAgICByZXN1bHQgPT4gcmVzdWx0ICYmIEJvb2xlYW4ocmVzdWx0LmVkaXRBY3Rpb24pXG4gICAgKTtcbiAgfVxuXG4gIGhhbmRsZVN0YXJ0RHJhZ2dpbmcoZXZlbnQ6IFN0YXJ0RHJhZ2dpbmdFdmVudCk6ID9FZGl0QWN0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5fY29hbGVzY2UoaGFuZGxlciA9PiBoYW5kbGVyLmhhbmRsZVN0YXJ0RHJhZ2dpbmcoZXZlbnQpKTtcbiAgfVxuXG4gIGhhbmRsZVN0b3BEcmFnZ2luZyhldmVudDogU3RvcERyYWdnaW5nRXZlbnQpOiA/RWRpdEFjdGlvbiB7XG4gICAgcmV0dXJuIHRoaXMuX2NvYWxlc2NlKGhhbmRsZXIgPT4gaGFuZGxlci5oYW5kbGVTdG9wRHJhZ2dpbmcoZXZlbnQpKTtcbiAgfVxuXG4gIGdldFRlbnRhdGl2ZUZlYXR1cmUoKTogP0ZlYXR1cmUge1xuICAgIHJldHVybiB0aGlzLl9jb2FsZXNjZShoYW5kbGVyID0+IGhhbmRsZXIuZ2V0VGVudGF0aXZlRmVhdHVyZSgpKTtcbiAgfVxuXG4gIGdldEVkaXRIYW5kbGVzKHBpY2tzPzogQXJyYXk8T2JqZWN0PiwgZ3JvdW5kQ29vcmRzPzogUG9zaXRpb24pOiBFZGl0SGFuZGxlW10ge1xuICAgIC8vIFRPRE86IENvbWJpbmUgdGhlIGhhbmRsZXMgKkJVVCogbWFrZSBzdXJlIGlmIG5vbmUgb2YgdGhlIHJlc3VsdHMgaGF2ZVxuICAgIC8vIGNoYW5nZWQgdG8gcmV0dXJuIHRoZSBzYW1lIG9iamVjdCBzbyB0aGF0IFwiZWRpdEhhbmRsZXMgIT09IHRoaXMuc3RhdGUuZWRpdEhhbmRsZXNcIlxuICAgIC8vIGluIGVkaXRhYmxlLWdlb2pzb24tbGF5ZXIgd29ya3MuXG4gICAgcmV0dXJuIHRoaXMuX2NvYWxlc2NlKFxuICAgICAgaGFuZGxlciA9PiBoYW5kbGVyLmdldEVkaXRIYW5kbGVzKHBpY2tzLCBncm91bmRDb29yZHMpLFxuICAgICAgaGFuZGxlcyA9PiBBcnJheS5pc0FycmF5KGhhbmRsZXMpICYmIGhhbmRsZXMubGVuZ3RoID4gMFxuICAgICk7XG4gIH1cblxuICBnZXRDdXJzb3IoeyBpc0RyYWdnaW5nIH06IHsgaXNEcmFnZ2luZzogYm9vbGVhbiB9KTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fY29hbGVzY2UoaGFuZGxlciA9PiBoYW5kbGVyLmdldEN1cnNvcih7IGlzRHJhZ2dpbmcgfSkpO1xuICB9XG59XG4iXX0=